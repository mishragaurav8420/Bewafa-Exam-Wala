import { Component, Input, ChangeDetectionStrategy } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "../services/gallery.service";
import * as i2 from "@angular/platform-browser";
import * as i3 from "@angular/common";
export class GalleryNavComponent {
    constructor(gallery, _sanitizer) {
        this.gallery = gallery;
        this._sanitizer = _sanitizer;
    }
    ngOnInit() {
        this.navIcon = this._sanitizer.bypassSecurityTrustHtml(this.config.navIcon);
    }
}
GalleryNavComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.5", ngImport: i0, type: GalleryNavComponent, deps: [{ token: i1.Gallery }, { token: i2.DomSanitizer }], target: i0.ɵɵFactoryTarget.Component });
GalleryNavComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "15.2.5", type: GalleryNavComponent, selector: "gallery-nav", inputs: { galleryId: "galleryId", state: "state", config: "config" }, ngImport: i0, template: `
    <i *ngIf="config.loop || state.hasPrev"
       class="g-nav-prev"
       aria-label="Previous"
       role="button"
       (click)="gallery.ref(this.galleryId).prev(config.navScrollBehavior)"
       [innerHtml]="navIcon"></i>

    <i *ngIf="config.loop || state.hasNext"
       class="g-nav-next"
       aria-label="Next"
       role="button"
       (click)="gallery.ref(this.galleryId).next(config.navScrollBehavior)"
       [innerHtml]="navIcon"></i>
  `, isInline: true, dependencies: [{ kind: "directive", type: i3.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.5", ngImport: i0, type: GalleryNavComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'gallery-nav',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    template: `
    <i *ngIf="config.loop || state.hasPrev"
       class="g-nav-prev"
       aria-label="Previous"
       role="button"
       (click)="gallery.ref(this.galleryId).prev(config.navScrollBehavior)"
       [innerHtml]="navIcon"></i>

    <i *ngIf="config.loop || state.hasNext"
       class="g-nav-next"
       aria-label="Next"
       role="button"
       (click)="gallery.ref(this.galleryId).next(config.navScrollBehavior)"
       [innerHtml]="navIcon"></i>
  `
                }]
        }], ctorParameters: function () { return [{ type: i1.Gallery }, { type: i2.DomSanitizer }]; }, propDecorators: { galleryId: [{
                type: Input
            }], state: [{
                type: Input
            }], config: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2FsbGVyeS1uYXYuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvbmctZ2FsbGVyeS9zcmMvbGliL2NvbXBvbmVudHMvZ2FsbGVyeS1uYXYuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQVUsS0FBSyxFQUFFLHVCQUF1QixFQUFFLE1BQU0sZUFBZSxDQUFDOzs7OztBQXlCbEYsTUFBTSxPQUFPLG1CQUFtQjtJQU85QixZQUFtQixPQUFnQixFQUFVLFVBQXdCO1FBQWxELFlBQU8sR0FBUCxPQUFPLENBQVM7UUFBVSxlQUFVLEdBQVYsVUFBVSxDQUFjO0lBQ3JFLENBQUM7SUFFRCxRQUFRO1FBQ04sSUFBSSxDQUFDLE9BQU8sR0FBRyxJQUFJLENBQUMsVUFBVSxDQUFDLHVCQUF1QixDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsT0FBTyxDQUFDLENBQUM7SUFDOUUsQ0FBQzs7Z0hBWlUsbUJBQW1CO29HQUFuQixtQkFBbUIseUhBaEJwQjs7Ozs7Ozs7Ozs7Ozs7R0FjVDsyRkFFVSxtQkFBbUI7a0JBbkIvQixTQUFTO21CQUFDO29CQUNULFFBQVEsRUFBRSxhQUFhO29CQUN2QixlQUFlLEVBQUUsdUJBQXVCLENBQUMsTUFBTTtvQkFDL0MsUUFBUSxFQUFFOzs7Ozs7Ozs7Ozs7OztHQWNUO2lCQUNGO3lIQUlVLFNBQVM7c0JBQWpCLEtBQUs7Z0JBQ0csS0FBSztzQkFBYixLQUFLO2dCQUNHLE1BQU07c0JBQWQsS0FBSyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgT25Jbml0LCBJbnB1dCwgQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgRG9tU2FuaXRpemVyLCBTYWZlSHRtbCB9IGZyb20gJ0Bhbmd1bGFyL3BsYXRmb3JtLWJyb3dzZXInO1xyXG5pbXBvcnQgeyBHYWxsZXJ5IH0gZnJvbSAnLi4vc2VydmljZXMvZ2FsbGVyeS5zZXJ2aWNlJztcclxuaW1wb3J0IHsgR2FsbGVyeVN0YXRlIH0gZnJvbSAnLi4vbW9kZWxzL2dhbGxlcnkubW9kZWwnO1xyXG5pbXBvcnQgeyBHYWxsZXJ5Q29uZmlnIH0gZnJvbSAnLi4vbW9kZWxzL2NvbmZpZy5tb2RlbCc7XHJcblxyXG5AQ29tcG9uZW50KHtcclxuICBzZWxlY3RvcjogJ2dhbGxlcnktbmF2JyxcclxuICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaCxcclxuICB0ZW1wbGF0ZTogYFxyXG4gICAgPGkgKm5nSWY9XCJjb25maWcubG9vcCB8fCBzdGF0ZS5oYXNQcmV2XCJcclxuICAgICAgIGNsYXNzPVwiZy1uYXYtcHJldlwiXHJcbiAgICAgICBhcmlhLWxhYmVsPVwiUHJldmlvdXNcIlxyXG4gICAgICAgcm9sZT1cImJ1dHRvblwiXHJcbiAgICAgICAoY2xpY2spPVwiZ2FsbGVyeS5yZWYodGhpcy5nYWxsZXJ5SWQpLnByZXYoY29uZmlnLm5hdlNjcm9sbEJlaGF2aW9yKVwiXHJcbiAgICAgICBbaW5uZXJIdG1sXT1cIm5hdkljb25cIj48L2k+XHJcblxyXG4gICAgPGkgKm5nSWY9XCJjb25maWcubG9vcCB8fCBzdGF0ZS5oYXNOZXh0XCJcclxuICAgICAgIGNsYXNzPVwiZy1uYXYtbmV4dFwiXHJcbiAgICAgICBhcmlhLWxhYmVsPVwiTmV4dFwiXHJcbiAgICAgICByb2xlPVwiYnV0dG9uXCJcclxuICAgICAgIChjbGljayk9XCJnYWxsZXJ5LnJlZih0aGlzLmdhbGxlcnlJZCkubmV4dChjb25maWcubmF2U2Nyb2xsQmVoYXZpb3IpXCJcclxuICAgICAgIFtpbm5lckh0bWxdPVwibmF2SWNvblwiPjwvaT5cclxuICBgXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBHYWxsZXJ5TmF2Q29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcclxuXHJcbiAgbmF2SWNvbjogU2FmZUh0bWw7XHJcbiAgQElucHV0KCkgZ2FsbGVyeUlkOiBzdHJpbmc7XHJcbiAgQElucHV0KCkgc3RhdGU6IEdhbGxlcnlTdGF0ZTtcclxuICBASW5wdXQoKSBjb25maWc6IEdhbGxlcnlDb25maWc7XHJcblxyXG4gIGNvbnN0cnVjdG9yKHB1YmxpYyBnYWxsZXJ5OiBHYWxsZXJ5LCBwcml2YXRlIF9zYW5pdGl6ZXI6IERvbVNhbml0aXplcikge1xyXG4gIH1cclxuXHJcbiAgbmdPbkluaXQoKSB7XHJcbiAgICB0aGlzLm5hdkljb24gPSB0aGlzLl9zYW5pdGl6ZXIuYnlwYXNzU2VjdXJpdHlUcnVzdEh0bWwodGhpcy5jb25maWcubmF2SWNvbik7XHJcbiAgfVxyXG59XHJcbiJdfQ==